<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="NoticeIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="NoticeMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>136, 17</value>
  </metadata>
  <metadata name="FlickerIconTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>262, 17</value>
  </metadata>
  <metadata name="AutoRunTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>446, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>